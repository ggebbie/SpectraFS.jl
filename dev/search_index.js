var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = SpectraFS","category":"page"},{"location":"#SpectraFS","page":"Home","title":"SpectraFS","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for SpectraFS.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [SpectraFS]","category":"page"},{"location":"#SpectraFS.band_avg","page":"Home","title":"SpectraFS.band_avg","text":"function bandavg.jl   Block averages for band averaging  [yyavg]=band_avg(yy,num,dimension)\n\nInputs: \tyy, quantity to be averaged (must be vector or matrix)\n\nnum, number of bands to average\ndimension (optional), dimension to average along; if specified, must be 1 or 2\n\nTom Farrar, 2016, jfarrar@whoi.edu  Ported to Julia, Jake Gebbie, 2021, jgebbie@whoi.edu =#\n\n\n\n\n\n","category":"function"},{"location":"#SpectraFS.centeredFFT-Tuple{Any, Any}","page":"Home","title":"SpectraFS.centeredFFT","text":"function centeredFFT(x,dt)\n\nComputes FFT, with zero frequency in the center, and returns    dimensional frequency vector.\n\nInputs:     x, vector to be transformed     dt, time increment\n\nAdapted from a function written by Quan Quach of blinkdagger.com       Tom Farrar, 2016, jfarrar@whoi.edu      For Julia, Jake Gebbie, 2021, jgebbie@whoi.edu\n\n\n\n\n\n","category":"method"},{"location":"#SpectraFS.confid-Tuple{Any, Any}","page":"Home","title":"SpectraFS.confid","text":"function confid(α,ν)\n\nHelp with computing confidence intervals\n\nshould be sigma^2/S^2 confidence bounds where sigma^2 is true variance\ncheck value (J&W) is alpha =.05, nu=19, lower bound is .58\nupper bound is 2.11\n\n\n\n\n\n","category":"method"},{"location":"#SpectraFS.spectralbasis","page":"Home","title":"SpectraFS.spectralbasis","text":"function spectralbasis(t,f)\n\nbasis function to reconstruct mean ocean temperature (Θ̄)\non the t temporal grid\n\nArguments\n\nt: times of interest\nf: Fourier frequencies\nincludemean=false::Bool: include the mean value in the basis set?, \n\nOutput\n\nA::Matrix: each column is an independent basis function,              first (nt-1)/2 columns are sine coefficients              second (nt-1)/2 columns are cosine coefficients              last column represents the mean value\n\n\n\n\n\n","category":"function"},{"location":"#SpectraFS.spectralpowerlaw","page":"Home","title":"SpectraFS.spectralpowerlaw","text":"spectralpowerlaw(β,f) = f.^-β\n\nArguments\n\nf: frequencies\nβ: power law coefficient, low frequencies\ne: total energy\nβhi: power law coefficient, high frequencies\n\nOutput\n\nΦ: spectral energy density\n\n\n\n\n\n","category":"function"},{"location":"#SpectraFS.totalspectralenergy-Tuple{Any, Any}","page":"Home","title":"SpectraFS.totalspectralenergy","text":"function totalspectralenergy(Φ,f)\n\nArguments\n\nΦ: power spectral density\nf: Fourier frequencies\n\nOutput\n\ne: total energy\n\n\n\n\n\n","category":"method"}]
}
